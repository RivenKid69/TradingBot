mode: eval
run_id: eval-run
logs_dir: logs
artifacts_dir: artifacts
execution_profile: MKT_OPEN_NEXT_H1
execution_params:
  slippage_bps: 0.0
  limit_offset_bps: 0.0  # e.g. 25 for 0.25% offset when using LIMIT_MID_BPS
  ttl_steps: 0           # e.g. 5 to cancel after 5 simulation steps
  tif: GTC               # e.g. IOC or FOK

# Optional path to 168 hourly liquidity multipliers (indexed by UTC hour-of-week;
# values clamped to [0.1, 10.0])
liquidity_seasonality_path: "configs/liquidity_latency_seasonality.json"
# Optional SHA256 hash of the above liquidity multipliers for integrity checking
liquidity_seasonality_hash: null
# Optional path to 168 hourly liquidity overrides multiplied with the above multipliers
liquidity_seasonality_override_path: null
# Optional path to 168 hourly latency multipliers (indexed by UTC hour-of-week;
# values clamped to [0.1, 10.0])
latency_seasonality_path: "configs/liquidity_latency_seasonality.json"
# Set false to ignore liquidity and latency multipliers
use_seasonality: true
input:
  trades_path: "data/trades.csv"

latency:
  base_ms: 250
  jitter_ms: 50
  spike_p: 0.01
  spike_mult: 5.0
  timeout_ms: 2500
  retries: 1
  seed: 0  # RNG seed; seasonality multipliers do not affect RNG state
components:
  market_data:
    target: impl_offline_data:OfflineCSVBarSource
    params:
      paths: ["data/eval.csv"]
      timeframe: "1m"
  executor:
    target: impl_sim_executor:SimExecutor
    params:
      symbol: "BTCUSDT"
  feature_pipe:
    target: feature_pipe:FeaturePipe
    params: {}
  policy:
    target: strategies.momentum:MomentumStrategy
    params: {}
  risk_guards:
    target: impl_risk_basic:RiskBasicImpl
    params: {}
  backtest_engine:
    target: service_backtest:ServiceBacktest
    params: {}
